"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9167],{935:function(e,t,a){a.d(t,{Z:function(){return f}});var r=JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}'),n=a(7378),i={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},o={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},s={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},l={size:{description:"The size at which the generated rule should break.",type:["Number"]}},d={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},p={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},h="A string representation of the media query condition that meets the requirements for the given breakpoint.",u="A string representation of the media query condition that meets the requirements for the given breakpoints.",c="A string representation of the media query condition that meets the requirements for the given size.",m="A string representation of the media query condition that meets the requirements for the given sizes.",g="A string representation of the media query condition that meets the requirements for the given breakpoint and size.",b="A string representation of the media query condition that meets the requirements for the given size and breakpoint.",f={module:"break",description:r.WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:l,return:{description:c}}]},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},o,s),return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},d,p),return:{description:m}},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},o,p),return:{description:g}},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},d,s),return:{description:b}}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:i,return:{description:h,type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:l,return:{description:c}}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:l,return:{description:c}}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},o,s),return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},d,p),return:{description:m}},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},o,p),return:{description:g}},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},d,s),return:{description:b}}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:i,return:{description:h,type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:l,return:{description:c}}]},annotate:{group:"break/helpers",description:"Enables a fixed annotation displaying the active breakpoints of the viewport.",parameters:{direction:{description:"The breakpoint categories to annotate.",type:["'horizontal'","'vertical'","'both'"],defaultValue:"'both'"},position:{description:"The location in the viewport where the annotation will be positioned.",type:["'top right'","'top left'","'bottom right'","'bottom left'"],defaultValue:"'bottom right'"},color:{description:"The primary color of the annotation.",type:["Color"],defaultValue:"#f3afe6"},size:{description:"The font size of the annotation.",type:["Number"],defaultValue:"12px"}},output:n.createElement(n.Fragment,null,"Styles a single ",n.createElement("code",null,"::before")," pseudo-element to a fixed position, with ",n.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/content",target:"_blank",rel:"nofollow noreferrer noopener"},n.createElement("code",null,"content"))," that describes the active horizontal and/or vertical breakpoints.")}}}},5753:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return m},default:function(){return v},frontMatter:function(){return c},metadata:function(){return g},toc:function(){return b}});var r=a(5773),n=a(808),i=a(7378),o=a(5318),s=a(6457);function l(e){var t=e.classNames,a=(0,s.Z)();return(0,i.useEffect)((function(){if(a){var e,r="string"==typeof t?[t]:t;return(e=document.body.classList).add.apply(e,r),function(){var e;return(e=document.body.classList).remove.apply(e,r)}}}),[a,t]),null}var d=a(5039),p=a(8239),h=a(935),u=["components"],c={title:"annotate ()",sidebar_label:"annotate",sidebar_class_name:"mixin",hide_title:!0,hide_table_of_contents:!0},m=void 0,g={unversionedId:"api/break/helpers/annotate",id:"api/break/helpers/annotate",isDocsHomePage:!1,title:"annotate ()",description:"This page enables the breakpoint annotation as defined in the example above.",source:"@site/docs/api/break/helpers/annotate.mdx",sourceDirName:"api/break/helpers",slug:"/api/break/helpers/annotate",permalink:"/api/break/helpers/annotate",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/break/helpers/annotate.mdx",tags:[],version:"current",frontMatter:{title:"annotate ()",sidebar_label:"annotate",sidebar_class_name:"mixin",hide_title:!0,hide_table_of_contents:!0},sidebar:"breakSidebar",previous:{title:"Break API Overview",permalink:"/api/break/"},next:{title:"horizontal-names",permalink:"/api/break/horizontal/names"}},b=[],f={toc:b};function v(e){var t=e.components,a=(0,n.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(p.Z,{fieldName:"annotate",fieldType:"function",spec:h.Z,mdxType:"DocPage"}),(0,o.kt)(l,{classNames:"annotate-example",mdxType:"AddClassToPage"}),(0,o.kt)(d.Z,{className:"language-scss",mdxType:"CodeBlock"},"@use '@sass-fairy/break' with (\n\t$vertical-sizes: (\n\t\tx-small: 0,\n\t\tmedium: 680px,\n\t\tlarge: 960px,\n\t\tx-large: 1200px\n\t)\n);\n\nbody.annotate-example {\n\t@include break.annotate($position: 'bottom left', $size: 14px) {\n\t\tz-index: 300;\n\t}\n}\n"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This page enables the breakpoint annotation as defined in the example above."))))}v.isMDXComponent=!0}}]);