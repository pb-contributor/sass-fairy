"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6779],{2516:function(t,e,i){i.r(e),i.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var n=i(5773),a=i(808),o=(i(7378),i(5318)),r=["components"],s={sidebar_label:"List Modifiers"},l="List Configuration Modifiers",c={unversionedId:"docs/list-modifiers",id:"docs/list-modifiers",title:"List Configuration Modifiers",description:"Functions that work on lists should accepts parameters that modify list configuration according to the conditions outline below.",source:"@site/docs/docs/list-modifiers.mdx",sourceDirName:"docs",slug:"/docs/list-modifiers",permalink:"/docs/list-modifiers",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/docs/list-modifiers.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"List Modifiers"},sidebar:"docsSidebar",previous:{title:"Comparison Logic",permalink:"/docs/compare-logic"},next:{title:"Advanced Usage",permalink:"/docs/advanced"}},d=[{value:"Delimiting Punctuation",id:"delimiting-punctuation",children:[],level:2},{value:"Enclosing Punctuation",id:"enclosing-punctuation",children:[],level:2}],u={toc:d};function p(t){var e=t.components,i=(0,a.Z)(t,r);return(0,o.kt)("wrapper",(0,n.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"list-configuration-modifiers"},"List Configuration Modifiers"),(0,o.kt)("p",null,"Functions that work on lists should accepts parameters that modify list configuration according to the conditions outline below."),(0,o.kt)("h2",{id:"delimiting-punctuation"},"Delimiting Punctuation"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"$separator")," parameter should be accepted when returning a list."),(0,o.kt)("h2",{id:"enclosing-punctuation"},"Enclosing Punctuation"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"$bracketed")," parameter should be accepted when returning a list..."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"...and bracket style cannot be singularly determined from the input."),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/api/list/concat"},(0,o.kt)("inlineCode",{parentName:"a"},"list.concat()"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/api/list/empty"},(0,o.kt)("inlineCode",{parentName:"a"},"list.empty()"))),(0,o.kt)("li",{parentName:"ol"},"etc."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"...that is not a subset of a source list and a potential input value."),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/api/list/map"},(0,o.kt)("inlineCode",{parentName:"a"},"list.map()"))),(0,o.kt)("li",{parentName:"ol"},"etc.")))))}p.isMDXComponent=!0}}]);