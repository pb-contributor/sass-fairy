"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8231],{6003:function(e,r,a){a.d(r,{Z:function(){return d}});var t={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},i={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},n={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},o={size:{description:"The size at which the generated rule should break.",type:["Number"]}},s={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},l={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},d={module:"break",description:JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}').WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:t,overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:o}],return:{type:["String"]}},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},i,n),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,l)},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},i,l)},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,n)}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:t,return:{type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:o}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:o}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},i,n),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,l)},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},i,l)},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,n)}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:t,return:{type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:o}]}}}},3199:function(e,r,a){a.r(r),a.d(r,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return h},default:function(){return m}});var t=a(5773),i=a(808),n=(a(7378),a(5318)),o=a(3458),s=a(6003),l=["components"],d={title:"down ()",hide_title:!0,hide_table_of_contents:!0},p=void 0,u={unversionedId:"api/break/vertical/down",id:"api/break/vertical/down",isDocsHomePage:!1,title:"down ()",description:"",source:"@site/docs/api/break/vertical/down.mdx",sourceDirName:"api/break/vertical",slug:"/api/break/vertical/down",permalink:"/api/break/vertical/down",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/break/vertical/down.mdx",tags:[],version:"current",frontMatter:{title:"down ()",hide_title:!0,hide_table_of_contents:!0},sidebar:"breakSidebar",previous:{title:"$vertical-values",permalink:"/api/break/vertical/values"},next:{title:"down-between ()",permalink:"/api/break/vertical/down-between"}},h=[],c={toc:h};function m(e){var r=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,t.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)(o.Z,{fieldName:"down",fieldType:"function",spec:s.Z,mdxType:"DocPage"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@sass-fairy/break' with (\n  $vertical-sizes: $your-sizes\n);\n\n// 1. As a function\n@debug break.down('md');\n  // '(max-height: 767.98px)'\n\n@debug break.down(800px);\n  // '(max-height: 799.89px)'\n\n// 2. As a mixin\nbody {\n  padding: 2rem;\n\n  @include break.down('md') {\n    padding: 1rem;\n  }\n\n  @include break.down(800px) {\n    padding: 1rem;\n  }\n}\n  // body { padding: 2rem }\n  // @media (max-height: 767.98px) {\n  //   body { padding: 1rem }\n  // }\n  // @media (max-height: 799.98px) {\n  //   body { padding: 1rem }\n  // }\n")))}m.isMDXComponent=!0}}]);