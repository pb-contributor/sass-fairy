"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3302],{935:function(e,t,r){r.d(t,{Z:function(){return b}});var i=JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}'),n=r(7378),a={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},s={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},o={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},c={size:{description:"The size at which the generated rule should break.",type:["Number"]}},l={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},p={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},d="A string representation of the media query condition that meets the requirements for the given breakpoint.",u="A string representation of the media query condition that meets the requirements for the given breakpoints.",h="A string representation of the media query condition that meets the requirements for the given size.",m="A string representation of the media query condition that meets the requirements for the given sizes.",g="A string representation of the media query condition that meets the requirements for the given breakpoint and size.",f="A string representation of the media query condition that meets the requirements for the given size and breakpoint.",b={module:"break",description:i.WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:a,return:{description:d,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:c,return:{description:h}}]},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,o),return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},l,p),return:{description:m}},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,p),return:{description:g}},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},l,o),return:{description:f}}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:a,return:{description:d,type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:a,return:{description:d,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:c,return:{description:h}}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:a,return:{description:d,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:c,return:{description:h}}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,o),return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},l,p),return:{description:m}},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,p),return:{description:g}},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},l,o),return:{description:f}}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:a,return:{description:d,type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:a,return:{description:d,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:c,return:{description:h}}]},annotate:{group:"break/helpers",description:"Enables a fixed annotation displaying the active breakpoints of the viewport.",parameters:{direction:{description:"The breakpoint categories to annotate.",type:["'horizontal'","'vertical'","'both'"],defaultValue:"'both'"},position:{description:"The location in the viewport where the annotation will be positioned.",type:["'top right'","'top left'","'bottom right'","'bottom left'"],defaultValue:"'bottom right'"},color:{description:"The primary color of the annotation.",type:["Color"],defaultValue:"#f3afe6"},size:{description:"The font size of the annotation.",type:["Number"],defaultValue:"12px"}},output:n.createElement(n.Fragment,null,"Styles a single ",n.createElement("code",null,"::before")," pseudo-element to a fixed position, with ",n.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/content",target:"_blank",rel:"nofollow noreferrer noopener"},n.createElement("code",null,"content"))," that describes the active horizontal and/or vertical breakpoints.")}}}},4237:function(e,t,r){r.d(t,{Z:function(){return a}});var i=JSON.parse('{"WL":"Provides extended functionality for generating new colors from existing colors and building color themes in Sass"}'),n=r(7378),a={module:"color",description:i.WL,basePath:"/api/color",variables:{"contrast-ratios":{group:"main",description:n.createElement(n.Fragment,null,"A map defining the ",n.createElement("a",{href:"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast",target:"_blank",rel:"nofollow noreferrer noopener"},"WCAG standard contrast ratios"),"."),defaultValue:"(AA: (normal: 4.5, large: 3), AAA: (normal: 7, large: 4.5))"}},functions:{a11y:{group:"main",description:n.createElement(n.Fragment,null,"Finds the nearest accessible color for the given color against another given color according to the specified ",n.createElement("a",{href:"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast",target:"_blank",rel:"nofollow noreferrer noopener"},"WCAG standard contrast ratio"),"."),parameters:{"a11y-color":{description:"The color that should change when the contrast does not meet the expected contrast ratio.",type:["Color"]},"other-color":{description:"The color that is compare against.",type:["Color"]},size:{description:"The size category of the WCAG standard which should be used to determine compliance.",type:["'normal'","'large'"],defaultValue:"'normal'"},level:{description:"The color that should change when the contrast does not meet the expected contrast ratio.",type:["'AA'","'AAA'"],defaultValue:"'AA'"}},return:{description:"A color that meets the given standards for size and level in contrast to the other color.",type:["Color"]}},contrast:{group:"main",description:n.createElement(n.Fragment,null,"The ",n.createElement("a",{href:"http://www.w3.org/TR/WCAG20/#contrast-ratiodef",target:"_blank",rel:"nofollow noreferrer noopener"},"WCAG contrast ratio")," between two colors, from 1 to 21 (commonly written 1:1 to 21:1)."),parameters:{"first-color":{description:"The first color, often the background color.",type:["Color"]},"second-color":{description:"The second color, often the foreground color.",type:["Color"]}},return:{description:"A number representing the contrast ratio between two colors.",type:["Number"]}},"is-dark":{group:"main",description:"Indicates whether a given color is considered dark.",parameters:{color:{description:"The color which may be dark.",type:["Color"]}},return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the given color is considered dark; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},"is-light":{group:"main",description:"Indicates whether a given color is considered light.",parameters:{color:{description:"The color which may be light.",type:["Color"]}},return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the given color is considered light; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},luminance:{group:"main",description:n.createElement(n.Fragment,null,"Returns a number indicating the ",n.createElement("a",{href:"https://www.w3.org/TR/WCAG20/#relativeluminancedef",target:"_blank",rel:"nofollow noreferrer noopener"},"WCAG relative luminance")," of the given color."),parameters:{color:{description:"The color for which to calculate the relative luminance.",type:["Color"]}},return:{description:"A number representing the relative luminance of the given color.",type:["Number"]}}}}},603:function(e,t,r){r.d(t,{Z:function(){return s}});var i=JSON.parse('{"WL":"Provides extended functionality for processing key/value pairs in Sass maps"}'),n=r(9571),a={"first-pair":{description:"The first key/value pair for the comparison.",type:["*"]},"second-pair":{description:"The second key/value pair for the comparison.",type:["*"]}},s={module:"map",description:i.WL,basePath:"/api/map",functions:{empty:{group:"main",description:"Creates an empty map.",return:{description:"An empty map.",type:["Map"]}},from:{group:"main",description:"Creates a map from the provided key/value pairs.",parameters:{"key-value":{description:"The key/value pairs from which a map will be created.",type:["ArgList"]}},return:{description:"A map with the given keys and values.",type:["Map"]}},"to-string":{group:"main",description:"Returns a string representing the specified map and its key/value pairs.",parameters:{map:{description:"The map from which to generate a string. When is an argument list, keywords will be included.",type:["Map","ArgList"]}},return:{description:"A string representing the given map.",type:["String"]}},"compare-key":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:a},n.Ud),"compare-key-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:a},n.Ud),"compare-numeric-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in ascending order. All non-numeric items are shifted right.",parameters:Object.assign({},a,n.Br)},n.Ud),"compare-numeric-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in descending order. All non-numeric items are shifted left.",parameters:Object.assign({},a,n.Br)},n.Ud),"compare-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:a},n.Ud),"compare-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:a},n.Ud)}}},8220:function(e,t,r){r.d(t,{Z:function(){return i}});var i={module:"math",description:JSON.parse('{"WL":"Provides extended functionality for working with numbers in Sass"}').WL,basePath:"/api/math",functions:{gcd:{group:"math/bounding",description:"Returns the Greatest Common Divisor (GCD) of a set of numbers.",parameters:{numbers:{description:"The numbers for which to calculate the greatest common divisor.",type:["ArgList<Number>"]}},return:{description:"The number that is the GCD of the given set of numbers.",type:["Number"]}},lcm:{group:"math/bounding",description:"Returns the Least Common Multiple (LCM) of a set of numbers.",parameters:{numbers:{description:"The numbers for which to calculate the least common multiple.",type:["ArgList<Number>"]}},return:{description:"The number that is the LCM of the given set of numbers.",type:["Number"]}},exp:{group:"math/exponential",description:"Returns Euler\u2019s number raised to the specified power.",parameters:{numbers:{description:"The power to which Euler\u2019s number will be raise.",type:["Number"]}},return:{description:"The number representing Euler\u2019s number raised to the given power.",type:["Number"]}},fact:{group:"math/exponential",description:"Returns the factorial of the specified integer.",parameters:{numbers:{description:"The integer to factorialize.",type:["Number"]}},return:{description:"The number that is the product of the factorialization of the given integer.",type:["Number"]}},change:{group:"math/unit",description:"Returns the given number with the same units as another specified number.",parameters:{number:{description:"The number whose units will be changed.",type:["Number"]},units:{description:"The number whose units will be inherited.",type:["Number"]}},return:{description:"The given number with the given units.",type:["Number"]}},unitless:{group:"math/unit",description:"Returns the unitless value of the specified number.",parameters:{number:{description:"The number from which to strip units.",type:["Number"]}},return:{description:"The given number without units.",type:["Number"]}}}}},1306:function(e,t,r){r.d(t,{Z:function(){return i}});var i={module:"meta",description:JSON.parse('{"WL":"Provides extended functionality for handling Sass\u2019s inner workings"}').WL,basePath:"/api/meta",functions:{"call-or-reference":{group:"main",description:"Allows a function to return its reference when no parameters are provided, otherwise maintaining its regular behavior.",parameters:{function:{description:"The function to call or reference.",type:["Function"]},args:{description:"The arguments to apply to the invocation of the function.",type:["ArgList"]}},return:{description:"The given function is returned when no arguments are given; otherwise, supplied with the given arguments, the value returned by the invocation of the given function is returned.",type:["Function","*"]}},"get-keyword":{group:"main",description:"Gets the value of the named parameter from the given argument list, otherwise providing a default value.",parameters:{args:{description:"The argument list from which to get the named parameter.",type:["!ArgList"]},name:{description:"The name of the parameter to get.",type:["String"]},default:{description:"The value of the parameter when not contained in the argument list.",type:["*"],defaultValue:"null"}},return:{description:"The value of the named parameter when it exists; otherwise, the given default value.",type:["*"]}},"strip-keywords":{group:"main",description:"Strips all named parameters from the given argument list.",parameters:{args:{description:"The argument list from which to strip all named parameters.",type:["!ArgList"]}},return:{description:"Returns the values of an argument list without named parameters.",type:["List"]}}}}},2968:function(e,t,r){r.d(t,{Z:function(){return c}});var i=JSON.parse('{"WL":"Provides extended functionality for processing strings in Sass, with interfaces similar to ECMA specifications"}'),n=r(7378),a=r(9571),s={"start-at":{description:"The index at which to begin the search. A negative index can be used, indicating an offset from the end of the source string.",type:["Number"],defaultValue:1}},o={"end-at":{description:"The index at which to end the search. A negative index can be used, indicating an offset from the end of the source string.",type:["Number"],defaultValue:-1}},c={module:"string",description:i.WL,basePath:"/api/string",hiddenNativeFields:["index"],functions:{"ends-with":{group:"main",description:"Determines whether a string ends with the characters of a specified substring, returning true or false as appropriate.",parameters:Object.assign({string:{description:"The source string in which the substring is to be searched for.",type:["String"]},substring:{description:"The characters to be searched for at the end of the source string.",type:["String"]}},o),return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the given characters are found at the end of the string; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},from:{group:"main",description:"Creates a normalized string from the provided value, with unique punctuation differentiating types and characteristics.",parameters:{value:{description:"The value from which to generate a string.",type:["*"]}},return:{description:"The string representation of the given value.",type:["String"]}},includes:{group:"main",description:"Determines whether a string includes the characters of a specified substring, returning true or false as appropriate.",parameters:Object.assign({string:{description:"The source string in which the substring is to be located.",type:["String"]},substring:{description:"The substring to locate in the source string.",type:["String"]}},s),return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the substring is found anywhere within the given string; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},index:{group:"main",description:"Returns the first index at which a specified substring can be found in a string; otherwise, 0 is returned, indicating the substring is not present.",parameters:Object.assign({string:{description:"The source string in which the substring is to be located.",type:["String"]},substring:{description:"The substring to locate in the source string.",type:["String"]}},s),return:{description:n.createElement(n.Fragment,null,"The index of the first occurrence of the substring, or ",n.createElement("code",null,"0"),"."),type:["Number"]}},"last-index":{group:"main",description:"Returns the last index at which a specified substring can be found in a string; otherwise, 0 is returned, indicating the substring is not present. The string is searched forwards, ending at a given index when specified.",parameters:{string:{description:"The source string in which the substring is to be located.",type:["String"]},substring:{description:"The substring to locate in the source string.",type:["String"]},"end-at":Object.assign({},o["end-at"],{defaultValue:1})},return:{description:n.createElement(n.Fragment,null,"The index of the last occurrence of the substring, or ",n.createElement("code",null,"0"),"."),type:["Number"]}},replace:{group:"main",description:"Replaces all instances of a specified substring from the source string with a given replacement.",parameters:{string:{description:"The source string in which the substring is to be replaced.",type:["String"]},substring:{description:"The substring to replace in the source string.",type:["String"]},replacement:{description:n.createElement(n.Fragment,null,n.createElement("p",null,"The replacement for each instance of the substring."),n.createElement("p",null,"A number of special replacement patterns are supported."),n.createElement("dl",{className:"grid"},n.createElement("dt",null,n.createElement("code",null,"$&")),n.createElement("dd",null,"Inserts the substring."),n.createElement("dt",null,n.createElement("code",null,"$`")),n.createElement("dd",null,"Inserts the portion of the source string that precedes the replaced substring."),n.createElement("dt",null,n.createElement("code",null,"$'")),n.createElement("dd",null,"Inserts the portion of the source string that follows the replaced substring."))),type:["String"]}},return:{description:"A string with all instances of the substring replaced by a replacement.",type:["Number"]}},split:{group:"main",description:"Divides a string into a list of substrings.",parameters:{string:{description:"The source string to divide into a list of substrings.",type:["String"]},delimiter:{description:"The delimiting string which separates each substring to be included in the list.",type:["String","Null"],defaultValue:"null"},limit:{description:"A non-negative integer specifying a limit on the number of substrings to be including in the list.",type:["Number","Null"],defaultValue:"null"},separator:Object.assign({},a.BG,{description:"The type of separator to be used by the returned list."}),bracketed:Object.assign({},a.NP,{description:"Whether the returned list has square brackets or no brackets."})},return:{description:"A list of strings, split at each point where the delimiter occurs in the given string.",type:["List"]}},"starts-with":{group:"main",description:"Determines whether a string begins with the characters of a specified substring, returning true or false as appropriate.",parameters:Object.assign({string:{description:"The source string in which the substring is to be searched for.",type:["String"]},substring:{description:"The characters to be searched for at the start of the source string.",type:["String"]}},s),return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the given characters are found at the beginning of the string; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},trim:{group:"main",description:"Removes whitespace from both ends of a string. Whitespace in this context is all the whitespace characters (space, tab, no-break space, etc.) and all the line terminator characters (LF, CR, etc.).",parameters:{string:{description:"The source string from which to remove leading and trailing whitespace.",type:["String"]}},return:{description:"A string stripped of whitespace from both its beginning and end. If neither the beginning or end of source string has any whitespace, the string is simply returned, with no exception being thrown.",type:["String"]}},"trim-end":{group:"main",description:"Removes whitespace from the end of a string.",parameters:{string:{description:"The source string from which to remove trailing whitespace.",type:["String"]}},return:{description:"A string stripped of whitespace from its end. If the end of source string has no whitespace, the string is simply returned, with no exception being thrown.",type:["String"]}},"trim-start":{group:"main",description:"Removes whitespace from the beginning of a string.",parameters:{string:{description:"The source string from which to remove leading whitespace.",type:["String"]}},return:{description:"A string stripped of whitespace from its beginning. If the beginning of source string has no whitespace, the string is simply returned, with no exception being thrown.",type:["String"]}}}}},3583:function(e,t,r){r.r(t),r.d(t,{DescriptionItem:function(){return S},contentTitle:function(){return T},default:function(){return z},frontMatter:function(){return k},metadata:function(){return x},toc:function(){return A}});var i=r(2685),n=r(1244),a=r(7378),s=r(5318),o=r(1884),c=["components"],l={toc:[]};function p(e){var t=e.components,r=(0,n.Z)(e,c);return(0,s.kt)("wrapper",(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(o.Z,{to:"https://www.npmjs.com/package/@sass-fairy/"+r.module,mdxType:"Link"},(0,s.kt)("img",{src:"https://img.shields.io/npm/v/@sass-fairy/"+r.module+".svg?color=6272a4&style=flat-square",alt:"Release Version"})))}p.isMDXComponent=!0;var d=r(4237),u=r(935),h=r(9571),m=r(603),g=r(8220),f=r(1306),b=r(2968),v=r(1854),y=r(8948),w=["components"],k={title:"Introduction",description:"Sass Fairy aims to abstract core functions to improve rapid development of domain specific stylesheets and modules.",slug:"/",hide_table_of_contents:!0},T=void 0,x={unversionedId:"docs/intro",id:"docs/intro",title:"Introduction",description:"Sass Fairy aims to abstract core functions to improve rapid development of domain specific stylesheets and modules.",source:"@site/docs/docs/intro.mdx",sourceDirName:"docs",slug:"/",permalink:"/",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/docs/intro.mdx",tags:[],version:"current",frontMatter:{title:"Introduction",description:"Sass Fairy aims to abstract core functions to improve rapid development of domain specific stylesheets and modules.",slug:"/",hide_table_of_contents:!0},sidebar:"docsSidebar",next:{title:"Install",permalink:"/docs/install"}},A=[{value:"Core Modules",id:"core-modules",children:[],level:2},{value:"Special Modules",id:"special-modules",children:[],level:2}],S=function(e){var t=e.name;return(0,s.kt)(a.Fragment,{mdxType:"Fragment"},(0,s.kt)("dt",null,(0,s.kt)(o.Z,{to:"/api/"+t,mdxType:"Link"},"@sass-fairy/",t)),(0,s.kt)("dd",null,(0,s.kt)("p",null,{color:d.Z.description,list:h.ZP.description,map:m.Z.description,math:g.Z.description,meta:f.Z.description,string:b.Z.description,break:u.Z.description,exception:v.Z.description}[t],".")),(0,s.kt)("dd",null,(0,s.kt)(p,{module:t,mdxType:"NpmBadge"})))},q={toc:A,DescriptionItem:S};function z(e){var t=e.components,r=(0,n.Z)(e,w);return(0,s.kt)("wrapper",(0,i.Z)({},q,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("img",{src:(0,y.Z)("/img/logo.svg"),alt:"Sass Fairy Logo",style:{width:"200px",marginBottom:"var(--ifm-spacing-vertical)",marginLeft:"var(--ifm-spacing-vertical)",float:"right"}}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sass Fairy")," is a set of modules that abstract common functionality to aid in the rapid development of domain specific stylesheets and modules."),(0,s.kt)("p",null,"There are two groups of modules: Core Modules and Special Modules. ",(0,s.kt)("strong",{parentName:"p"},"Core Modules")," extend the native, ",(0,s.kt)("a",{parentName:"p",href:"https://sass-lang.com/documentation/modules"},"built-in modules")," provided by Sass. While on the other hand, ",(0,s.kt)("strong",{parentName:"p"},"Special Modules")," are abstractions of other concepts and utilities commonly used when designing stylesheets, mixins, or functions."),(0,s.kt)("h2",{id:"core-modules"},"Core Modules"),(0,s.kt)("dl",null,(0,s.kt)(S,{name:"color",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"list",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"map",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"math",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"meta",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"string",mdxType:"DescriptionItem"})),(0,s.kt)("h2",{id:"special-modules"},"Special Modules"),(0,s.kt)("dl",null,(0,s.kt)(S,{name:"break",mdxType:"DescriptionItem"}),(0,s.kt)(S,{name:"exception",mdxType:"DescriptionItem"})))}z.isMDXComponent=!0}}]);