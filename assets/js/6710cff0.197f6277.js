"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3861],{8132:function(e,r,a){a.d(r,{ZP:function(){return s}});var t=a(5773),n=a(808),i=(a(7378),a(5318)),o=["components"],l={toc:[]};function s(e){var r=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},l,a,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Don\u2019t see the function you\u2019re looking for? Request a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/roydukkey/sass-fairy/issues/new"},"new feature")," describing a use case."))}s.isMDXComponent=!0},6003:function(e,r,a){a.d(r,{Z:function(){return u}});var t={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},n={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},i={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},o={size:{description:"The size at which the generated rule should break.",type:["Number"]}},l={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},s={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},u={module:"break",description:JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}').WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:t,overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:o}],return:{type:["String"]}},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},n,i),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},l,s)},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},n,s)},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},l,i)}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:t,return:{type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:o}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:o}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},n,i),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},l,s)},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},n,s)},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},l,i)}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:t,return:{type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:t,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:o}]}}}},9615:function(e,r,a){a.d(r,{Z:function(){return c}});var t=a(4142),n=a(5773),i=a(808),o=a(7378),l=a(5318),s=["components"],u={toc:[]};function d(e){var r=e.components,a=(0,i.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"More information on ",(0,l.kt)("a",{parentName:"p",href:"/docs/compare-logic"},"comparison logic")," and ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference-functions"},"reference functions"),"."))}d.isMDXComponent=!0;var p=a(8337);function c(e){var r=e.spec,a=r.basePath,n=r.functions,i=e.group,l=null==i?void 0:i.split("/")[1];return l&&(a+="/"+l),o.createElement(o.Fragment,null,o.createElement("dl",null,n&&Object.entries(n).filter((function(e){return e[1].group===(null!=i?i:"main")})).map((function(e,r){var n=e[0],i=e[1],l=i.description,s=i.parameters,u=i.overloads;return o.createElement(o.Fragment,{key:r},o.createElement("dt",null,o.createElement(t.Z,{to:a+"/"+n},o.createElement("code",null,o.createElement(p.Z,{fieldName:n,parameters:s})))," ",u&&u.length>0&&o.createElement("small",{className:"spec-overload-count"},"[+",u.length,"\xa0overload",u.length>1&&"s","]")),o.createElement("dd",null,o.createElement("p",null,l)))}))),(null==i?void 0:i.endsWith("/reference"))&&o.createElement(d,null))}},7220:function(e,r,a){a.d(r,{Z:function(){return i}});var t=a(4142),n=a(7378);function i(e){var r=e.spec,a=r.basePath,i=r.variables,o=e.group,l=null==o?void 0:o.split("/")[1];return l&&(a+="/"+l),n.createElement("dl",null,i&&Object.entries(i).filter((function(e){return e[1].group===(null!=o?o:"main")})).map((function(e,r){var i=e[0],o=e[1],l=o.fileName,s=o.description,u=o.configurable;return n.createElement(n.Fragment,{key:r},n.createElement("dt",null,n.createElement(t.Z,{to:a+"/"+(null!=l?l:i)},n.createElement("code",null,"$",i,u&&" !default"))),n.createElement("dd",null,n.createElement("p",null,s)))})))}},3903:function(e,r,a){a.r(r),a.d(r,{frontMatter:function(){return c},contentTitle:function(){return h},metadata:function(){return m},toc:function(){return g},default:function(){return b}});var t=a(5773),n=a(808),i=(a(7378),a(5318)),o=a(8132),l=a(9615),s=a(4193),u=a(6003),d=a(7220),p=["components"],c={title:"Break API Overview",slug:"./"},h="<ModuleDocHeader spec=",m={unversionedId:"api/break/overview",id:"api/break/overview",isDocsHomePage:!1,title:"Break API Overview",description:"Horizontal Breakpoints",source:"@site/docs/api/break/overview.mdx",sourceDirName:"api/break",slug:"/api/break/",permalink:"/api/break/",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/break/overview.mdx",tags:[],version:"current",frontMatter:{title:"Break API Overview",slug:"./"},sidebar:"breakSidebar",next:{title:"$horizontal-names",permalink:"/api/break/horizontal/names"}},g=[{value:"Horizontal Breakpoints",id:"horizontal-breakpoints",children:[{value:"Variables",id:"variables",children:[],level:3},{value:"Mixins / Functions",id:"mixins--functions",children:[],level:3}],level:2},{value:"Vertical Breakpoints",id:"vertical-breakpoints",children:[{value:"Variables",id:"variables-1",children:[],level:3},{value:"Mixins / Functions",id:"mixins--functions-1",children:[],level:3}],level:2}],v={toc:g};function b(e){var r=e.components,a=(0,n.Z)(e,p);return(0,i.kt)("wrapper",(0,t.Z)({},v,a,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-api-overview"},(0,i.kt)(s.Z,{spec:u.Z,link:!1,mdxType:"ModuleDocHeader"})," API Overview"),(0,i.kt)("h2",{id:"horizontal-breakpoints"},"Horizontal Breakpoints"),(0,i.kt)("h3",{id:"variables"},"Variables"),(0,i.kt)(d.Z,{spec:u.Z,group:"break/horizontal",mdxType:"VariableList"}),(0,i.kt)("h3",{id:"mixins--functions"},"Mixins / Functions"),(0,i.kt)(l.Z,{spec:u.Z,group:"break/horizontal",mdxType:"FunctionList"}),(0,i.kt)(o.ZP,{mdxType:"FeatureRequest"}),(0,i.kt)("h2",{id:"vertical-breakpoints"},"Vertical Breakpoints"),(0,i.kt)("h3",{id:"variables-1"},"Variables"),(0,i.kt)(d.Z,{spec:u.Z,group:"break/vertical",mdxType:"VariableList"}),(0,i.kt)("h3",{id:"mixins--functions-1"},"Mixins / Functions"),(0,i.kt)(l.Z,{spec:u.Z,group:"break/vertical",mdxType:"FunctionList"}),(0,i.kt)(o.ZP,{mdxType:"FeatureRequest"}))}b.isMDXComponent=!0}}]);