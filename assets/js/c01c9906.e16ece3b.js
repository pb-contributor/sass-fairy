"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9711],{6003:function(e,a,r){r.d(a,{Z:function(){return d}});var n={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},t={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},i={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},o={size:{description:"The size at which the generated rule should break.",type:["Number"]}},s={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},l={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},d={module:"break",description:JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}').WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:n,overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:o}],return:{type:["String"]}},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},t,i),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,l)},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},t,l)},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:Object.assign({},s,i)}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:n,return:{type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:n,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:o}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:n,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:o}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},t,i),return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,l)},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},t,l)},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:Object.assign({},s,i)}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:n,return:{type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:n,return:{type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:o}]}}}},4557:function(e,a,r){r.r(a),r.d(a,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return h},default:function(){return c}});var n=r(5773),t=r(808),i=(r(7378),r(5318)),o=r(3458),s=r(6003),l=["components"],d={title:"in-between ()",hide_title:!0,hide_table_of_contents:!0},p=void 0,u={unversionedId:"api/break/horizontal/in-between",id:"api/break/horizontal/in-between",isDocsHomePage:!1,title:"in-between ()",description:"",source:"@site/docs/api/break/horizontal/in-between.mdx",sourceDirName:"api/break/horizontal",slug:"/api/break/horizontal/in-between",permalink:"/api/break/horizontal/in-between",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/break/horizontal/in-between.mdx",tags:[],version:"current",frontMatter:{title:"in-between ()",hide_title:!0,hide_table_of_contents:!0},sidebar:"breakSidebar",previous:{title:"in ()",permalink:"/api/break/horizontal/in"},next:{title:"in-only ()",permalink:"/api/break/horizontal/in-only"}},h=[],m={toc:h};function c(e){var a=e.components,r=(0,t.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,i.kt)(o.Z,{fieldName:"in-between",fieldType:"function",spec:s.Z,mdxType:"DocPage"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@sass-fairy/break';\n\n// 1. As a function\n@debug break.in-between('md', 'xl');\n  // '(min-width: 768px) and (max-width: 1199.98px)'\n\n@debug break.in-between(800px, 'xl');\n  // '(min-width: 800px) and (max-width: 1199.98px)'\n\n// 2. As a mixin\nbody {\n  padding: 2rem;\n\n  @include break.in-between('md', 'xl') {\n    padding: 1rem;\n  }\n\n  @include break.in-between(800px, 'xl') {\n    padding: 1rem;\n  }\n}\n  // body { padding: 2rem }\n  // @media (min-width: 768px) and (max-width: 1199.98px) {\n  //   body { padding: 1rem }\n  // }\n  // @media (min-width: 800px) and (max-width: 1199.98px) {\n  //   body { padding: 1rem }\n  // }\n")))}c.isMDXComponent=!0}}]);