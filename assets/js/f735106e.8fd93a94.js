"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7039],{603:function(e,t,r){r.d(t,{Z:function(){return n}});var i=JSON.parse('{"WL":"Provides extended functionality for processing key/value pairs in Sass maps"}'),a=r(9571),s={"first-pair":{description:"The first key/value pair for the comparison.",type:["*"]},"second-pair":{description:"The second key/value pair for the comparison.",type:["*"]}},n={module:"map",description:i.WL,basePath:"/api/map",functions:{empty:{group:"main",description:"Creates an empty map.",return:{description:"An empty map.",type:["Map"]}},from:{group:"main",description:"Creates a map from the provided key/value pairs.",parameters:{"key-value":{description:"The key/value pairs from which a map will be created.",type:["ArgList"]}},return:{description:"A map with the given keys and values.",type:["Map"]}},"to-string":{group:"main",description:"Returns a string representing the specified map and its key/value pairs.",parameters:{map:{description:"The map from which to generate a string. When is an argument list, keywords will be included.",type:["Map","ArgList"]}},return:{description:"A string representing the given map.",type:["String"]}},"compare-key":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:s},a.Ud),"compare-key-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:s},a.Ud),"compare-numeric-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in ascending order. All non-numeric items are shifted right.",parameters:Object.assign({},s,a.Br)},a.Ud),"compare-numeric-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in descending order. All non-numeric items are shifted left.",parameters:Object.assign({},s,a.Br)},a.Ud),"compare-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:s},a.Ud),"compare-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:s},a.Ud)}}},9370:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return d},default:function(){return g}});var i=r(5773),a=r(808),s=(r(7378),r(5318)),n=r(8239),o=r(603),p=["components"],c={title:"to-string ()",hide_title:!0,hide_table_of_contents:!0},m=void 0,u={unversionedId:"api/map/to-string",id:"api/map/to-string",isDocsHomePage:!1,title:"to-string ()",description:"",source:"@site/docs/api/map/to-string.mdx",sourceDirName:"api/map",slug:"/api/map/to-string",permalink:"/api/map/to-string",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/map/to-string.mdx",tags:[],version:"current",frontMatter:{title:"to-string ()",hide_title:!0,hide_table_of_contents:!0},sidebar:"mapSidebar",previous:{title:"from ()",permalink:"/api/map/from"},next:{title:"compare-key ()",permalink:"/api/map/reference/compare-key"}},d=[],l={toc:d};function g(e){var t=e.components,r=(0,a.Z)(e,p);return(0,s.kt)("wrapper",(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(n.Z,{fieldName:"to-string",fieldType:"function",spec:o.Z,mdxType:"DocPage"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@sass-fairy/map';\n\n$map: (false: true, a: 1, null: null, b: 2, 3: c, true: false);\n\n@debug map.to-string($map);\n  // 'false: true; a: 1; : ; b: 2; 3: c; true: false'\n")))}g.isMDXComponent=!0}}]);