"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9116],{6398:function(e,t,r){var a=r(2799),s=r(7378),n=r(9846);t.Z=function(){return s.createElement(a.Z,{spec:n.Z})}},9846:function(e,t,r){r.d(t,{Z:function(){return i}});var a=JSON.parse('{"WL":"Provides extended functionality for processing key/value pairs in Sass maps"}'),s=r(340),n={"first-pair":{description:"The first key/value pair for the comparison.",type:["*"]},"second-pair":{description:"The second key/value pair for the comparison.",type:["*"]}},i={module:"map",description:a.WL,basePath:"/api/map",functions:{empty:{group:"main",description:"Creates an empty map.",return:{description:"An empty map.",type:["Map"]}},from:{group:"main",description:"Creates a map from the provided key/value pairs.",parameters:{"key-value":{description:"The key/value pairs from which a map will be created.",type:["ArgList"]}},return:{description:"A map with the given keys and values.",type:["Map"]}},"to-string":{group:"main",description:"Returns a string representing the specified map and its key/value pairs.",parameters:{map:{description:"The map from which to generate a string. When is an argument list, keywords will be included.",type:["Map","ArgList"]}},return:{description:"A string representing the given map.",type:["String"]}},"compare-key":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:n},s.Ud),"compare-key-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 keys by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:n},s.Ud),"compare-numeric-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in ascending order. All non-numeric items are shifted right.",parameters:Object.assign({},n,s.Br)},s.Ud),"compare-numeric-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values as numbers in descending order. All non-numeric items are shifted left.",parameters:Object.assign({},n,s.Br)},s.Ud),"compare-value":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in ascending order. All null items are shifted right.",parameters:n},s.Ud),"compare-value-desc":Object.assign({group:"map/reference",description:"Compares two key/value pairs\u2019 values by converting them to strings, then comparing the value\u2019s sequences of UTF-16 code units values in descending order. All null items are shifted left.",parameters:n},s.Ud)}}},9652:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var a=r(5773),s=r(808),n=(r(7378),r(5318)),i=r(6398),p=["components"],o={title:"empty ()",module:"map",sidebar_label:"empty",sidebar_class_name:"function",hide_table_of_contents:!0},m=void 0,c={unversionedId:"api/map/empty",id:"api/map/empty",title:"empty ()",description:"",source:"@site/docs/api/map/empty.mdx",sourceDirName:"api/map",slug:"/api/map/empty",permalink:"/api/map/empty",editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/map/empty.mdx",tags:[],version:"current",frontMatter:{title:"empty ()",module:"map",sidebar_label:"empty",sidebar_class_name:"function",hide_table_of_contents:!0},sidebar:"mapSidebar",previous:{title:"Map API Overview",permalink:"/api/map/"},next:{title:"from",permalink:"/api/map/from"}},u={},d=[],l={toc:d};function g(e){var t=e.components,r=(0,s.Z)(e,p);return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(i.Z,{mdxType:"FieldDetails"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@sass:list';\n@use '@sass:meta';\n@use '@sass-fairy/map';\n\n$map: map.empty();\n\n@debug meta.type-of($map) == 'map';\n  // true\n\n@debug list.length($map);\n  // 0\n")))}g.isMDXComponent=!0}}]);